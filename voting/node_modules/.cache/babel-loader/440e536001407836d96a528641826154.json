{"ast":null,"code":"var _jsxFileName = \"/Users/janbehnke/Galvanize/react-starter-apps/react-starter-apps/voting/src/Voting.js\";\nimport React, { Component } from 'react';\nimport { Vote } from './Vote';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Voting extends Component {\n  constructor() {\n    super();\n    this.state = {\n      count: 0,\n      name: \"undefinded\",\n      language_list: [\"JavaScript\", \"Python\", \"Go\", \"Java\", \"TypeScript\", \"Ruby\", \"Elixir\"]\n    };\n\n    this.incrementCount = () => {\n      this.setState({\n        count: this.state.count + 1\n      });\n    };\n\n    this.state = {\n      count: 0,\n      name: props.name\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"languages\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Vote for a language\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 32\n      }, this), this.state.language_list.map(language => /*#__PURE__*/_jsxDEV(Vote, {\n        name: language\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 49\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/janbehnke/Galvanize/react-starter-apps/react-starter-apps/voting/src/Voting.js"],"names":["React","Component","Vote","Voting","constructor","state","count","name","language_list","incrementCount","setState","props","render","map","language"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,IAAR,QAAmB,QAAnB;;AAEA,OAAO,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAIrCG,EAAAA,WAAW,GAAG;AACb;AADa,SAFdC,KAEc,GAFN;AAAEC,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,IAAI,EAAE,YAAlB;AAAgCC,MAAAA,aAAa,EAAE,CAAC,YAAD,EAAe,QAAf,EAAyB,IAAzB,EAA+B,MAA/B,EAAuC,YAAvC,EAAqD,MAArD,EAA6D,QAA7D;AAA/C,KAEM;;AAAA,SAKdC,cALc,GAKG,MAAM;AACtB,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,OAAd;AACA,KAPa;;AAEb,SAAKD,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,IAAI,EAAEI,KAAK,CAACJ;AAAxB,KAAb;AACA;;AAMDK,EAAAA,MAAM,GAAG;AACR,wBACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,mCAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA5B,EACG,KAAKP,KAAL,CAAWG,aAAX,CAAyBK,GAAzB,CAA6BC,QAAQ,iBAAK,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEA;AAAZ;AAAA;AAAA;AAAA;AAAA,cAA1C,CADH;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAMA;;AApBoC","sourcesContent":["import React, { Component } from 'react';\nimport {Vote} from './Vote'\n\nexport class Voting extends Component {\n\n\tstate = { count: 0, name: \"undefinded\", language_list: [\"JavaScript\", \"Python\", \"Go\", \"Java\", \"TypeScript\", \"Ruby\", \"Elixir\"]}\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = { count: 0, name: props.name };\n\t}\n\n\tincrementCount = () => {\n\t\tthis.setState({ count: this.state.count + 1 })\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"languages\"> <h1>Vote for a language</h1>\n\t\t\t\t{ this.state.language_list.map(language => (<Vote name={language} />))}\n\t\t\t</div>\n\n\t\t);\n\t}\n}"]},"metadata":{},"sourceType":"module"}